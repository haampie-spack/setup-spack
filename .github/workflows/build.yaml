name: CI

on:
  push:
    branches: [rebuild-spack]

jobs:
  build:
    name: Spack on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - ubuntu-18.04
        - macos-10.15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup
      run: |
        git clone --depth 5 https://github.com/spack/spack.git
        patch -p1 -d spack -i ../patches/wrapper.patch
        ./spack/bin/spack -e . concretize
    - name: Restore build cache
      uses: actions/cache@v2
      with:
        path: ~/.setup-spack
        key: ${{ matrix.os }}-${{ hashFiles('spack.lock') }}
        restore-keys: |
          ${{ matrix.os }}-
    - name: Install
      run: |
        SPACK_OPTIMIZATION_FLAGS=-Os ./spack/bin/spack -e . install -j3
    - uses: actions/upload-artifact@v2
      with:
        name: spack-lockfile-${{ matrix.os }}
        path: |
          spack.lock
  upload:
    name: Upload results on ${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - ubuntu-18.04
        - macos-10.15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: spack-lockfile-${{ matrix.os }}
    - name: Restore build cache
      uses: actions/cache@v2
      with:
        path: ~/.setup-spack
        key: ${{ matrix.os }}-${{ hashFiles('spack.lock') }}
    - name: Remove garbage
      run: |
        git clone --depth 5 https://github.com/spack/spack.git
        ./spack/bin/spack -e . gc -y
        ./spack/bin/spack -e . clean -a
        ./spack/bin/spack -e . env view regenerate
    - name: Bundling
      run: |
        tar --use-compress-program="zstd -T0" -cf ${{ matrix.os }}.tar.zst -C ~/ .setup-spack
    - name: Upload release assets
      run: |
        name=${{ matrix.os }}.tar.zst
        curl -fsS \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/haampie-spack/setup-spack/releases > release_info.json

        # Get the release url
        release_id="$(< release_info.json jq -r '.[] | select(.tag_name=="develop") | .id')"

        if [ -z "$release_id" ]; then
          echo "Couldn't get release id"
          exit 1
        fi

        echo "Using release id $release_id"

        # Get the asset url
        asset_url="$(< release_info.json jq -r --arg name "$name" '.[] | select(.tag_name=="develop") | .assets[] | select(.name==$name) | .url')"

        # Delete the asset
        if [ -n "$asset_url" ]; then
          echo "Deleting remote $name"
          curl -fsS \
            -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$asset_url"
        fi

        # Upload a new one.
        echo "Uploading $name"
        curl -fsS \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary "@$name" \
          "https://uploads.github.com/repos/haampie-spack/setup-spack/releases/$release_id/assets?name=$name)"
